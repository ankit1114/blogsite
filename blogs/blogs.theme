<?php

/**
 * @file
 * Functions to support theming in the blogs theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\file\Plugin\views\field\File;
use Drupal\user\Entity\User;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function blogs_preprocess_html(&$variables) {
  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'layout-no-sidebars';
  }

  if (!empty($variables['page']['featured_top'])) {
    $variables['attributes']['class'][] = 'has-featured-top';
  }
  if (isset($variables['node_type']) && $variables['node_type'] == 'article') {
    $variables['attributes']['class'][] = 'blog-full-page';
  }

}

/**
 * Implements hook_preprocess_HOOK() for page title templates.
 */
function blogs_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = [
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    ];
    $variables['title_suffix']['shortcut_wrapper'] = [
      '#markup' => '</div>',
      '#weight' => -99,
    ];
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
function blogs_preprocess_maintenance_page(&$variables) {
  // By default, site_name is set to Drupal if no db connection is available
  // or during site installation. Setting site_name to an empty string makes
  // the site and update pages look cleaner.
  // @see template_preprocess_maintenance_page
  if (!$variables['db_is_active']) {
    $variables['site_name'] = '';
  }

  // blogs has custom styling for the maintenance page.
  $variables['#attached']['library'][] = 'blogs/maintenance_page';
}


/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function blogs_preprocess_node(&$variables) {
  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }
  $user_picture = $variables['node']->getOwner()->get('user_picture')->view();
  $user_picture['#title'] = '';
  $variables['content']['user_picture'] = \Drupal::service('renderer')->render($user_picture);
  $variables['content']['user_name'] = $variables['node']->getOwner()->getAccountName();
  $variables['content']['created'] = date('d/m/Y', $variables['node']->getCreatedTime());
} 


/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function blogs_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function blogs_preprocess_menu(&$variables) {
  $variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function blogs_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function blogs_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
  }
  if ($form_id == 'user_login_form') {
   /* kint($form);
    exit();*/
    $form['#attributes'] = array('class' => 'form-inline offset-lg-6 my-2 my-lg-0');
    $form['name']['#attributes']['class'][] = 'form-control mr-sm-2'; //array('class' => 'form-control mr-sm-2');
    $form['pass']['#attributes']['class'][] = 'form-control mr-sm-2'; //array('class' => 'form-control mr-sm-2');
    $form['actions']['submit']['#attributes']['class'][] = 'btn btn-outline-success my-2 my-sm-0';
    $form['name']['#attributes']['placeholder'] = t('USERNAME');
    $form['pass']['#attributes']['placeholder'] = t('PASSWORD');
    /*$form['#prefix'] = '<div class="collapse navbar-collapse" id="navbarSupportedContent">';
    $form['#suffix'] = '</div>';*/
    
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function blogs_theme_suggestions_paragraph_alter(&$suggestions, $variables) {
  $paragraph = $variables['elements']['#paragraph'];
  $parent = $paragraph->getParentEntity();
  if ($parent) {
    $suggestions[] = 'paragraph__' . $parent->bundle() . '__' .  $paragraph->bundle();
  }
}